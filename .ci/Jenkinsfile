@Library("jenlib") _

apps = ["dls-core"]

try {
	runOnSlave(label: "frontend") {
		wafSetup(projects: ["genpybind"])
	}

	for (app in apps) {
		stage("Build & Test for " + app) {
			onSlurmResource([partition: "jenkins", "cpus-per-task": 8, mem: "60G"]) {
				dir("genpybind") {
					inSingularity(app: app) {
						jesh "PREFIX=$PWD/install ./waf configure build --notests"
						// ECM (2025-01-20): test execution seems racy :(
						jesh "./waf install --alltests"
					}
				}
			}
		}

		stage("Test Evaluation for " + app) {
			runOnSlave(label: "frontend") {
				String xmlResultPattern = "genpybind/build/tests/reports/*.xml"

				// Always keep the plain results
				archiveArtifacts xmlResultPattern

				// Parse test results
				step([$class       : 'XUnitPublisher',
				      thresholdMode: 1,
				      thresholds   : [[$class           : 'FailedThreshold',
				                       unstableThreshold: '0'],
				      ],
				      tools        : [[$class               : 'GoogleTestType',
				                       deleteOutputFiles    : true,
				                       failIfNotNew         : true,
				                       pattern              : xmlResultPattern,
				                       skipNoTestFiles      : false,
				                       stopProcessingIfError: true]
				      ]
				])
			}
		}
	}
} catch (Throwable t) {
	notifyFailure(mattermostChannel: "#softies")
	throw t
}

// Some Jenkins steps fail a build without raising (e.g. archiveArtifacts)
if (currentBuild.currentResult != "SUCCESS") {
	notifyFailure(mattermostChannel: "#softies")
}
